name: Android CI - Build optimized artifacts

on:
  workflow_dispatch:
  push:
    branches: [ main, optimize/android-size ]

permissions:
  contents: read

jobs:
  build-apk:
    runs-on: ubuntu-latest
    env:
      ANDROID_SDK_ROOT: /usr/local/lib/android/sdk
      JAVA_TOOL_OPTIONS: -Xmx4g
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true
          # intentionally not pinning flutter-version to allow GitHub runner to use latest stable Flutter
          # which provides a newer Dart SDK compatible with current plugin versions

      - name: Install Android SDK command-line tools
        run: |
          mkdir -p $ANDROID_SDK_ROOT/cmdline-tools
          curl -sSfL https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -o tools.zip
          unzip -q tools.zip -d $ANDROID_SDK_ROOT/cmdline-tools
          mv $ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools $ANDROID_SDK_ROOT/cmdline-tools/latest

      - name: Accept Android licenses
        run: |
          yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT --licenses || true

      - name: Install Android SDK components
        run: |
          $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT "platform-tools" "platforms;android-33" "build-tools;33.0.2" "ndk;27.0.12077973"
          yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT --licenses

      - name: Install dependencies
        run: flutter pub get
          
      - name: Generate launcher icons
        run: |
          if [ -f "pubspec.yaml" ] && grep -q "flutter_launcher_icons:" "pubspec.yaml"; then
            flutter pub run flutter_launcher_icons:main
          fi

      - name: Build AAB and analyze size
        run: |
          flutter clean
          flutter build appbundle --release --analyze-size
        env:
          JAVA_TOOL_OPTIONS: -Xmx4g

      - name: Build split-per-ABI APKs
        run: |
          flutter build apk --release --split-per-abi --target-platform android-arm,android-arm64 --tree-shake-icons
        env:
          JAVA_TOOL_OPTIONS: -Xmx4g

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-artifacts
          path: |
            build/app/outputs/**/*.aab
            build/app/outputs/**/*.apk
            build/**/app_size_*.json
