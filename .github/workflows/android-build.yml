name: Build Android APK

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]

permissions:
  contents: read

jobs:
  build-apk:
    runs-on: ubuntu-latest
    env:
      ANDROID_SDK_ROOT: /usr/local/lib/android/sdk
      JAVA_TOOL_OPTIONS: -Xmx4g
      FLUTTER_VERSION: '3.13.9'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.13.9'
          channel: 'stable'
          cache: true

      - name: Install Android SDK command-line tools
        run: |
          mkdir -p $ANDROID_SDK_ROOT/cmdline-tools
          curl -sSfL https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -o tools.zip
          unzip -q tools.zip -d $ANDROID_SDK_ROOT/cmdline-tools
          mv $ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools $ANDROID_SDK_ROOT/cmdline-tools/latest

      - name: Accept Android licenses
        run: |
          yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT --licenses || true

      - name: Install Android SDK components
        run: |
          $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT "platform-tools" "platforms;android-33" "build-tools;33.0.2" "ndk;27.0.12077973"
          yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT --licenses

      - name: Install dependencies
        run: |
          echo "Cleaning Flutter..."
          flutter clean
          
          echo "Removing pubspec.lock..."
          rm -f pubspec.lock
          
          echo "Setting up Flutter..."
          flutter config --no-analytics
          flutter precache
          
          echo "Verifying Flutter installation..."
          flutter --version
          flutter doctor -v
          
          echo "Installing dependencies (attempt 1)..."
          flutter pub get --verbose || {
            echo "First attempt failed, retrying after cache clean..."
            flutter pub cache clean
            flutter pub get --verbose
          } || {
            echo "Both attempts failed. Checking environment..."
            echo "PWD: $PWD"
            echo "Flutter config:"
            flutter config
            echo "Directory contents:"
            ls -la
            echo "pubspec.yaml contents:"
            cat pubspec.yaml
            exit 1
          }
          
      - name: Generate launcher icons
        run: |
          if [ -f "pubspec.yaml" ] && grep -q "flutter_launcher_icons:" "pubspec.yaml"; then
            flutter pub run flutter_launcher_icons:main
          fi

      - name: Build APK (arm64)
        run: |
          flutter doctor -v
          flutter clean
          flutter pub get
          flutter build apk --release --target-platform android-arm64 --no-shrink --verbose

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-arm64-v8a-release.apk
          path: build/app/outputs/flutter-apk/app-arm64-v8a-release.apk
